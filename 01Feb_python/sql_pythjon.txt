DBMS : Database management system
************************************
RDBMS : Realtional database management system
**********************************************
SQL : strucuture query lang.
***************************
C - create
R - read
U - update
D - delete
***************************
DDL : data defination lang.
**************************
crate : to create database or tabel
alter : to make changes in created table
drop : to remove table or db
truncate : to remove all data from table, table strcure remain as it is

Ex : 
CREATE DATABASE python
USE python;
DROP DATABASE python;

Table : 
there are two types of constrains on table
1 : datatype*
int
varchar
double
date
blob
clob

2 : key
notnull
unique key
primary
foreign

Ex : 
CREATE TABLE student(id INT PRIMARY KEY,NAME VARCHAR(20),email VARCHAR(50));

ALTER TABLE student ADD COLUMN phone INT
ALTER TABLE student MODIFY COLUMN phone VARCHAR(20)
ALTER TABLE student DROP COLUMN phone
ALTER TABLE student RENAME TO STD

TRUNCATE STD;

DROP TABLE STD;
****************************************************************
DML : data manipulation lang.
*****************************
insert
update
delete

Ex : 
INSERT INTO student VALUES(1,"test","test@gmail.com");
INSERT INTO student(id,NAME) VALUES(2,"Mayank");

INSERT INTO student(email) VALUES("mayank@gmial.com")

UPDATE student SET email="mayank@gmial.com" WHERE id=2

DELETE FROM student WHERE id=0;
***************************************************************
DQL : data query lang.
*************************
select
CREATE TABLE emp(id INT PRIMARY KEY AUTO_INCREMENT,NAME VARCHAR(20),email VARCHAR(50),dept VARCHAR(20),sal DOUBLE)

SELECT * FROM emp;

SELECT NAME,email FROM emp;

SELECT * FROM emp WHERE dept='java'

SELECT * FROM emp WHERE dept='java' OR dept='php'
SELECT * FROM emp WHERE dept='java' AND sal>5000;

SELECT * FROM emp WHERE dept IN('java','php')
SELECT * FROM emp WHERE dept NOT IN('java','php')

SELECT * FROM emp WHERE NAME LIKE 't%';
SELECT * FROM emp WHERE NAME LIKE '%s';
SELECT * FROM emp WHERE NAME LIKE '%e%';
SELECT * FROM emp WHERE NAME LIKE '__c%'

SELECT * FROM emp ORDER BY NAME
SELECT * FROM emp ORDER BY sal DESC

SELECT SUM(sal) FROM emp;
SELECT AVG(sal) FROM emp;
SELECT MIN(sal) FROM emp;
SELECT MAX(sal) FROM emp;
SELECT COUNT(*) AS total FROM emp;


SELECT * FROM emp WHERE sal =(SELECT MAX(sal) FROM emp)
SELECT * FROM emp WHERE sal = (SELECT MAX(sal) FROM emp WHERE sal <(SELECT MAX(sal) FROM emp));
SELECT * FROM emp WHERE sal IN (SELECT MAX(sal) FROM emp GROUP BY dept);

SELECT * FROM emp LIMIT 1,3

SELECT * FROM emp ORDER BY sal DESC LIMIT 0,1
SELECT * FROM emp ORDER BY sal DESC LIMIT 1,1

****************************************************************************
DCL : data control lang.
***********************
commit
rollback

START TRANSACTION;

DELETE FROM emp WHERE id=2;
SAVEPOINT a;
UPDATE emp SET dept='sql' WHERE id=5;

ROLLBACK TO a;


COMMIT;

********************************************************************************************************
********************************************************************************************************
Foreign key : 

CREATE TABLE category(cid INT PRIMARY KEY AUTO_INCREMENT, catname VARCHAR(20))
CREATE TABLE product(pid INT PRIMARY KEY AUTO_INCREMENT,pname VARCHAR(20), price INT, cid INT, FOREIGN KEY(cid) REFERENCES category(cid))


innerjoin
outer join
-left
-right
-full

SELECT product.pname,category.`catname` FROM category JOIN product ON category.cid=product.`cid`

SELECT p.pname,c.`catname` FROM category c JOIN product p ON c.cid=p.`cid`

SELECT p.pname,c.`catname` FROM category c RIGHT JOIN product p ON c.cid=p.`cid`
SELECT p.pname,c.`catname` FROM category c LEFT JOIN product p ON c.cid=p.`cid`


SELECT p.pname,c.`catname` FROM category c RIGHT JOIN product p ON c.cid=p.`cid` UNION
SELECT p.pname,c.`catname` FROM category c LEFT JOIN product p ON c.cid=p.`cid`














